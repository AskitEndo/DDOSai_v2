server {
    listen 80;
    server_name localhost;
    root /usr/share/nginx/html;
    index index.html;

    # Gzip compression
    gzip on;
    gzip_types text/plain text/css application/json application/javascript text/xml application/xml application/xml+rss text/javascript;
    gzip_min_length 1000;
    gzip_comp_level 6;

    # Cache static assets
    location ~* \.(jpg|jpeg|png|gif|ico|css|js|svg)$ {
        expires 30d;
        add_header Cache-Control "public, no-transform";
    }

    # API proxy with error handling
    location /api/ {
        proxy_pass http://backend:8000/api/;
        proxy_http_version 1.1;
        proxy_set_header Upgrade $http_upgrade;
        proxy_set_header Connection 'upgrade';
        proxy_set_header Host $host;
        proxy_cache_bypass $http_upgrade;
        proxy_set_header X-Real-IP $remote_addr;
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
        proxy_set_header X-Forwarded-Proto $scheme;
        
        # Set timeout for API requests
        proxy_connect_timeout 5s;
        proxy_read_timeout 30s;
        
        # Return JSON error for API failures
        proxy_intercept_errors on;
        error_page 500 502 503 504 = @api_error;
    }

    # WebSocket proxy with error handling
    location /ws/ {
        proxy_pass http://backend:8000/ws/;
        proxy_http_version 1.1;
        proxy_set_header Upgrade $http_upgrade;
        proxy_set_header Connection "upgrade";
        proxy_set_header Host $host;
        proxy_set_header X-Real-IP $remote_addr;
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
        proxy_read_timeout 86400; # 24 hours
        
        # Handle WebSocket connection errors
        proxy_intercept_errors on;
        error_page 500 502 503 504 = @api_error;
    }

    # API error handler - returns JSON for API requests
    location @api_error {
        default_type application/json;
        return 502 '{"error": "Backend API unavailable", "status": 502, "message": "The backend service is currently unavailable. Please try again later."}';
    }

    # Serve index.html for all routes (SPA support)
    location / {
        try_files $uri $uri/ /index.html;
        
        # Add headers to prevent caching of the main HTML file
        add_header Cache-Control "no-cache, no-store, must-revalidate";
        add_header Pragma "no-cache";
        add_header Expires "0";
    }

    # Error pages
    error_page 404 /index.html;
    error_page 500 502 503 504 /50x.html;
    location = /50x.html {
        root /usr/share/nginx/html;
    }
}